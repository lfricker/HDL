
//=======================================================
//  This code is generated by Terasic System Builder
//=======================================================

module Toplevel_C5G_GPIO(

   //////////// CLOCK //////////
   input                       CLOCK_125_p,
   input                       CLOCK_50_B5B,
   input                       CLOCK_50_B6A,
   input                       CLOCK_50_B7A,
   input                       CLOCK_50_B8A,

   //////////// LED //////////
   output           [7:0]      LEDG,
   output           [9:0]      LEDR,

   //////////// KEY //////////
   input                       CPU_RESET_n,
   input            [3:0]      KEY,

   //////////// SW //////////
   input            [9:0]      SW,

   //////////// SEG7 //////////
   output           [6:0]      HEX0,
   output           [6:0]      HEX1,

   //////////// GPIO, GPIO connect to GPIO Default //////////
   output           [35:0]      GPIO
);



//=======================================================
//  LOGIC declarations
//=======================================================

logic             rst_n;
logic             clk50m;
logic             en_1m;
logic    [4:0]    cnt;


//=======================================================
//  Structural coding
//=======================================================

assign rst_n  = CPU_RESET_n;
assign clk50m = CLOCK_50_B5B;
assign GPIO = '0;
assign LEDG = '0;


prescaler #(.ratio (50)) u0_prescaler
(
   .rst_n         ,
   .clk           (clk50m),
   .en            (en_1m)
);

counter_pwm #(.W (5)) u0_counter_pwm
(
   .rst_n         ,
   .clk50m        ,
   .en            (en_1m),
   .down          (1'b0),
   .cmp           ('0),
   .per           ('1),

   .cnt           (cnt),
   .pwm           ()
);

sevenseg u0_sevenseg
(
   .bin            (cnt[3:0]), 
   .hex            (),
   .hexn           (HEX0[6:0])
);

sevenseg u1_sevenseg
(
   .bin            ({3'b000, cnt[4]}),
   .hex            (),
   .hexn           (HEX1[6:0])
);

memory_quartus u0_memory_quartus
(
   .address        (cnt),
   .clock          (clk50m),
   .q              (LEDR[9:0])
);


endmodule
